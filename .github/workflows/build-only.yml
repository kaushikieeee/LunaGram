name: Build LunaGram (No Release)

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Build version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build app
      run: npm run build
      env:
        CSC_IDENTITY_AUTO_DISCOVERY: false
        
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: LunaGram-${{ github.event.inputs.version }}-builds
        path: |
          dist/*.dmg
          dist/*.zip
        retention-days: 30
        
    - name: Build Summary
      run: |
        echo "### ðŸš€ Build Complete!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Version**: ${{ github.event.inputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Built Files**:" >> $GITHUB_STEP_SUMMARY
        echo "- Intel DMG: \`LunaGram-1.0.0.dmg\`" >> $GITHUB_STEP_SUMMARY
        echo "- Apple Silicon DMG: \`LunaGram-1.0.0-arm64.dmg\`" >> $GITHUB_STEP_SUMMARY
        echo "- Intel ZIP: \`LunaGram-1.0.0-mac.zip\`" >> $GITHUB_STEP_SUMMARY
        echo "- Apple Silicon ZIP: \`LunaGram-1.0.0-arm64-mac.zip\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "ðŸ“¥ **Download**: Check the 'Artifacts' section above to download the built files." >> $GITHUB_STEP_SUMMARY